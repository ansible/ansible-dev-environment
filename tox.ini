[tox]
requires =
    setuptools>=65.3
    tox>=4.25
    tox-extra>=2.1
    tox-uv>=1.25
env_list =
    py
    deps
    docs
    lint
    devel
    pkg
skip_missing_interpreters = true

[testenv]
description = Run pytest
    devel: with development dependencies
package = editable
deps =
    devel: ansible-core@ git+https://github.com/ansible/ansible.git
extras =
    test
pass_env =
    ANSIBLE_*
    CI
    CONTAINER_*
    DOCKER_*
    GITHUB_*
    HOME
    PYTEST_*
    SSH_AUTH_SOCK
    TERM
    USER
set_env =
    COVERAGE_COMBINED = {envdir}/.coverage
    COVERAGE_FILE = {env:COVERAGE_FILE:{env_dir}/.coverage.{envname}}
    COVERAGE_PROCESS_START = {toxinidir}/pyproject.toml
    FORCE_COLOR = 1
    PIP_CONSTRAINT = {toxinidir}/.config/constraints.txt
    PRE_COMMIT_COLOR = always
    TERM = xterm-256color
    UV_CONSTRAINT = {toxinidir}/.config/constraints.txt
    deps, devel: PIP_CONSTRAINT = /dev/null
    deps, devel: UV_CONSTRAINT = /dev/null
commands_pre =
    sh -c "rm -f {envdir}/.coverage* 2>/dev/null || true"
commands =
    python -c 'import pathlib; pathlib.Path("{env_site_packages_dir}/cov.pth").write_text("import coverage; coverage.process_startup()")'
    coverage run -m pytest {posargs:-n auto}
    coverage combine -q --data-file={env:COVERAGE_COMBINED}
    coverage xml --data-file={env:COVERAGE_COMBINED} -o {envdir}/coverage.xml --fail-under=0
    coverage lcov --data-file={env:COVERAGE_COMBINED} -o {toxinidir}/.cache/.coverage/lcov.info --fail-under=0
    coverage report --data-file={env:COVERAGE_COMBINED}
allowlist_externals =
    git
    rm
    sh

[testenv:deps]
description = Bump all dependencies
base_python = python3.11
skip_install = true
deps =
    {[testenv:lint]deps}
extras =
set_env =
    PIP_CONSTRAINT = /dev/null
commands_pre =
commands =
    -pre-commit run --all-files --show-diff-on-failure --hook-stage manual deps
    -pre-commit autoupdate
    git diff --exit-code
env_dir = {toxworkdir}/lint

[testenv:docs]
description = Builds docs
package = editable
skip_install = false
extras =
    docs
set_env =
    NO_COLOR = 1
    TERM = dump
commands =
    mkdocs build --strict --site-dir=_readthedocs/html/ {posargs:}

[testenv:lint]
description = Enforce quality standards under {basepython}
skip_install = true
deps =
    pre-commit>=4.0.1
    pre-commit-uv>=4.1.4
    setuptools>=51.1.1
set_env =
    PIP_CONSTRAINT = /dev/null
commands =
    pre-commit run --show-diff-on-failure --all-files

[testenv:pkg]
description =
    Do packaging/distribution
skip_install = true
deps =
    build>=0.9
    twine >= 4.0.2  # pyup: ignore
set_env =
commands =
    rm -rfv {toxinidir}/dist/
    python -m build --outdir {toxinidir}/dist/ {toxinidir}
    sh -c "python -m twine check --strict {toxinidir}/dist/*"
