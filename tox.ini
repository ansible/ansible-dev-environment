[tox]
requires =
    tox>=4.11.3
env_list =
    py
    lint
    pkg
    docs
skip_missing_interpreters = true
work_dir = {env:TOX_WORK_DIR:.tox}

[testenv]
description = Run pytest under {basepython}
package = editable
extras =
    test
pass_env =
    CI
    CONTAINER_*
    DOCKER_*
    GITHUB_*
    HOME
    PYTEST_*
    SSH_AUTH_SOCK
    TERM
    USER
set_env =
    COVERAGE_PROCESS_START = {toxinidir}/pyproject.toml
    FORCE_COLOR = 1
    PIP_CONSTRAINT = {toxinidir}/.config/requirements.txt
    PRE_COMMIT_COLOR = always
    TERM = xterm-256color
commands_pre =
    sh -c "rm -f .coverage* coverage.xml 2>/dev/null || true"
commands =
    coverage run -m pytest {posargs}
commands_post =
    py,py{39,310,311,312}: sh -c "coverage combine .coverage.*"
    py,py{39,310,311,312}: coverage xml
    py,py{39,310,311,312}: coverage report
allowlist_externals =
    rm
    sh

[testenv:lint]
description = Enforce quality standards under {basepython}
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run --show-diff-on-failure --all-files

[testenv:pkg]
description =
    Do packaging/distribution
skip_install = true
deps =
    build>=0.9
    twine >= 4.0.2  # pyup: ignore
set_env =
commands =
    rm -rfv {toxinidir}/dist/
    python -m build \
      --outdir {toxinidir}/dist/ \
      {toxinidir}
    sh -c "python -m twine check --strict {toxinidir}/dist/*"

[testenv:docs]
description = Builds docs
package = editable
skip_install = false
extras =
    docs
set_env =
    NO_COLOR = 1
    TERM = dump
commands =
    mkdocs build {posargs:}

[testenv:clean]
description = Erase coverage data
skip_install = true
deps =
    coverage[toml]
commands =
    coverage erase

[testenv:report]
description = Produce coverage report
skip_install = true
deps =
    coverage[toml]
commands =
    coverage report
    cat .tox/.tmp/.mypy/index.txt
